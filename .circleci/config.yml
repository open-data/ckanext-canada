version: 2.1
parameters:
  GHA_Event:
    type: string
    default: ""
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""
orbs:
  slack: circleci/slack@4.12.5
jobs:
  test:
    docker:
      - image: openknowledge/ckan-dev:2.8  # primary executor
        name: ckan
        environment:
          PGHOST: postgres
          PGDATABASE: postgres
          PGUSER: postgres
          PGPASSWORD: pass
          CKAN_POSTGRES_DB: ckan_test
          CKAN_DATASTORE_POSTGRES_DB: datastore_test
          CKAN_POSTGRES_USER: ckan_default
          CKAN_DATASTORE_POSTGRES_READ_USER: datastore_read
          CKAN_DATASTORE_POSTGRES_WRITE_USER: datastore_write
          CKAN_POSTGRES_PWD: pass
          CKAN_DATASTORE_POSTGRES_READ_PWD: pass
          CKAN_DATASTORE_POSTGRES_WRITE_PWD: pass
          CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
          CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
          CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
          CKAN_SOLR_URL: http://solr:8983/solr/ckan_registry
          CKAN_REDIS_URL: redis://redis:6379/1
      - image: opendatacanada/solr  # dependency service
        name: solr
      - image: postgres:9.6  # dependency service
        name: postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: postgres
      - image: redis:3  # dependency service
        name: redis
    steps:
      - add_ssh_keys:
          fingerprints:
            - "94:db:2e:03:93:db:67:64:e3:8c:32:b0:d1:c6:7a:b7"
            - "0c:02:84:7e:c0:46:16:eb:9b:5e:1d:c9:f8:3b:5a:3d"
      - checkout
      - run:
          name: Set CKAN to open-data/ckan@canada-v2.9
          command: |
            pip uninstall -y ckan
            git --git-dir=\/srv\/app\/src\/ckan\/.git --work-tree=\/srv\/app\/src\/ckan\/ remote add canada https://github.com/open-data/ckan.git
            git --git-dir=\/srv\/app\/src\/ckan\/.git --work-tree=\/srv\/app\/src\/ckan\/ fetch canada canada-v2.9
            git --git-dir=\/srv\/app\/src\/ckan\/.git --work-tree=\/srv\/app\/src\/ckan\/ checkout -b canada-v2.9 canada/canada-v2.9
            git --git-dir=\/srv\/app\/src\/ckan\/.git --work-tree=\/srv\/app\/src\/ckan\/ pull
      - run:
          name: Install requirements
          command: |
            apk add jpeg-dev
            pip install setuptools==36.1
            pip install --upgrade pip==19.2.1
            pip install -e \/srv\/app\/src\/ckan\/ -r \/srv\/app\/src\/ckan\/requirements-py2.txt -r \/srv\/app\/src\/ckan\/dev-requirements.txt
            pip install -e 'git+https://github.com/ckan/ckanapi.git#egg=ckanapi' -r 'https://raw.githubusercontent.com/ckan/ckanapi/master/requirements.txt'
            pip install -e . -r .\/requirements.txt -r .\/test-requirements.txt
            pip install -e 'git+https://github.com/ckan/ckanext-fluent.git#egg=ckanext-fluent' -r 'https://raw.githubusercontent.com/ckan/ckanext-fluent/master/requirements.txt'
            pip install -e 'git+https://github.com/open-data/ckanext-recombinant.git@canada-v2.9#egg=ckanext-recombinant' -r 'https://raw.githubusercontent.com/open-data/ckanext-recombinant/canada-v2.9/requirements.txt'
            pip install -e 'git+https://github.com/ckan/ckanext-scheming.git#egg=ckanext-scheming'
            pip install -e 'git+https://github.com/open-data/ckanext-validation.git@canada#egg=ckanext-validation' -r 'https://raw.githubusercontent.com/open-data/ckanext-validation/canada/requirements.txt' -r 'https://raw.githubusercontent.com/open-data/ckanext-validation/canada/dev-requirements.txt'
            pip install -e 'git+https://github.com/open-data/ckanext-xloader.git#egg=ckanext-xloader' -r 'https://raw.githubusercontent.com/open-data/ckanext-xloader/master/requirements.txt' -r 'https://raw.githubusercontent.com/open-data/ckanext-xloader/master/dev-requirements.txt'
            pip install -e 'git+https://github.com/ckan/ckantoolkit.git#egg=ckantoolkit' -r 'https://raw.githubusercontent.com/ckan/ckantoolkit/master/requirements.txt'
            pip install -e 'git+https://github.com/open-data/goodtables.git@canada#egg=goodtables' -r 'https://raw.githubusercontent.com/open-data/goodtables/canada/requirements.txt'
            pip install -e 'git+https://github.com/open-data/ckanext-wet-boew.git#egg=ckanext-wet-boew' -r 'https://raw.githubusercontent.com/open-data/ckanext-wet-boew/master/requirements.txt'
            pip install -e 'git+https://github.com/open-data/ckanext-security.git@canada-v2.9#egg=ckanext-security' -r 'https://raw.githubusercontent.com/open-data/ckanext-security/canada-v2.9/requirements-py2.txt'
            find \/srv\/app\/ -name '*.pyc' -delete
      - run:
          name: Setup extension (CKAN 2.9)
          command: |
            ln -s \/srv\/app\/src\/ckan\/test-core.ini .\/links\/test-core.ini
            ln -s \/srv\/app\/src\/ckan\/who.ini .\/links\/who.ini
            mkdir -p .\/links\/ckanext\/datastore\/tests\/ && ln -s \/srv\/app\/src\/ckan\/ckanext\/datastore\/tests\/allowed_functions.txt .\/links\/ckanext\/datastore\/tests\/allowed_functions.txt
            mkdir -p .\/links\/ckan\/bin\/postgres_init\/ && ln -s \/srv\/app\/src\/ckan\/bin\/postgres_init\/1_create_ckan_db.sh .\/links\/ckan\/bin\/postgres_init\/1_create_ckan_db.sh && ln -s \/srv\/app\/src\/ckan\/bin\/postgres_init\/2_create_ckan_datastore_db.sh .\/links\/ckan\/bin\/postgres_init\/2_create_ckan_datastore_db.sh
            python2 setup.py develop
            . .\/links\/ckan\/bin\/postgres_init\/1_create_ckan_db.sh
            . .\/links\/ckan\/bin\/postgres_init\/2_create_ckan_datastore_db.sh
            ckan -c test-core.ini db init
            ckan -c test-core.ini datastore set-permissions | psql -U postgres --set ON_ERROR_STOP=1
            paster --plugin=ckanext-canada canada update-triggers -c test-core.ini
            paster --plugin=ckanext-recombinant recombinant create-triggers -a -c test-core.ini
            python2 .\/bin\/download_country.py
      - run:
          name: Run all tests
          command: |
            pytest --ckan-ini=test-core.ini ckanext/canada/tests
      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

workflows:
  build_and_test:
    when: << pipeline.parameters.GHA_Action >>
    jobs:
      - test:
          context:
            - Slack
