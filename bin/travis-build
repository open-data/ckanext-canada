#!/bin/sh

# Drop Travis' postgres cluster if we're building using a different pg version
TRAVIS_PGVERSION='9.1'
if [ $PGVERSION != $TRAVIS_PGVERSION ]
then
  sudo -u postgres pg_dropcluster --stop $TRAVIS_PGVERSION main
  # Make psql use $PGVERSION
  export PGCLUSTER=$PGVERSION/main
fi

# Install postgres and solr
# We need this ppa so we can install postgres-8.4
sudo add-apt-repository -yy ppa:pitti/postgresql
sudo apt-get update -qq
sudo apt-get install solr-jetty postgresql-$PGVERSION libgeos-c1

sudo service postgresql reload

# Setup postgres' users and databases
sudo -u postgres psql -c "CREATE USER ckantest WITH PASSWORD 'pass';"
sudo -u postgres psql -c "CREATE USER datastore WITH PASSWORD 'pass';"
sudo -u postgres psql -c 'CREATE DATABASE ckantest WITH OWNER ckantest;'
sudo -u postgres psql -c 'CREATE DATABASE datastore WITH OWNER ckantest;'

mkdir dl
cd dl
git clone https://github.com/open-data/ckan
cd -
cd dl/ckan
git checkout canada-v2.0
cd -

ln -s ../dl/ckan links/ckan
pip install -r links/ckan/pip-requirements.txt \
	-r links/ckan/pip-requirements-test.txt --use-mirrors

python setup.py develop

cd dl
wget http://github.com/wet-boew/wet-boew-dist/archive/v3.1.2-release-dist.zip
unzip v3.1.2-release-dist.zip
DIST_DIR="`python -c'import ckanext.wet_boew as wb; print wb.__file__.rsplit("/",1)[0]'`"/public/dist
echo mv wet-boew-dist-3.1.2-release-dist/dist/* "$DIST_DIR/."
mv wet-boew-dist-3.1.2-release-dist/dist/* "$DIST_DIR/."
wget http://code.jquery.com/mobile/1.3.0/jquery.mobile-1.3.0.js \
    -O "$DIST_DIR/js/jquerymobile/jquery.mobile-1.3.0.js"
cd -

# Configure Solr
echo "NO_START=0\nJETTY_HOST=127.0.0.1\nJETTY_PORT=8983\nJAVA_HOME=$JAVA_HOME" | sudo tee /etc/default/jetty
# FIXME the solr schema cannot be hardcoded as it is dependent on the ckan version
sudo cp solr_schema.xml /etc/solr/conf/schema.xml
sudo service jetty restart

CANADA_DIR="`pwd`"
CKAN_DIR="`python -c'import ckan; print ckan.__file__.rsplit("/",2)[0]'`"
cd "$CKAN_DIR"
paster make-config ckan development.ini --no-interactive
sed -i -e 's/.*solr_url.*/solr_url = http:\/\/127.0.0.1:8983\/solr/' development.ini
sed -i -e 's/.*ckan\.site_id =.*/ckan.site_id = travis_ci/' development.ini
sed -i -e 's/^sqlalchemy.url.*/sqlalchemy.url = postgresql:\/\/ckantest:pass@localhost\/ckantest/' development.ini
sed -i -e 's/.*datastore.write_url.*/ckan.datastore.write_url = postgresql:\/\/ckantest:pass@localhost\/datastore/' development.ini
ln -s "$CKAN_DIR"/test-core.ini "$CANADA_DIR"/links/test-core.ini
ln -s "$CKAN_DIR"/development.ini "$CANADA_DIR"/links/development.ini
ln -s "$CKAN_DIR"/who.ini "$CANADA_DIR"/links/who.ini
paster db init -c "$CANADA_DIR"/test-core.ini

# If Postgres >= 9.0, we don't need to use datastore's legacy mode.
if [ $PGVERSION != '8.4' ]
then
  psql -c 'CREATE USER datastore_default;' -U postgres
  sed -i -e 's/.*datastore.read_url.*/ckan.datastore.read_url = postgresql:\/\/datastore_default@\/datastore_test/' test-core.ini
  paster datastore set-permissions postgres -c "$CANADA_DIR"/test-core.ini
else
  sed -i -e 's/.*datastore.read_url.*//' test-core.ini
fi
cd -

cat test-core.ini

paster canada create-vocabularies -c links/development.ini
paster canada create-organizations -c links/development.ini

# And finally, run the tests
nosetests --with-pylons=test-core.ini --nologcapture ckanext/canada/tests
