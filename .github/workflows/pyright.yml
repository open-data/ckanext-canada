name: Check types
on: [workflow_call, workflow_dispatch]
env:
  NODE_VERSION: '18'

permissions:
  contents: read

jobs:
  typecheck:
    runs-on: ubuntu-latest
    container:
      image: opendatacanada/ckan-pytest  # primary executor
    steps:
      - name: Install Node
        run: |
          apk add nodejs npm
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Check Source Dependency Versions
        run: |
          source /srv/app/venv/bin/activate
          for dir in /srv/app/src/*; do
            srcName=$(echo "$dir" | awk -F'/' '{print $NF}');
            if [[ -d "$dir/.git"  ]]; then
                printf "${srcName}: Checking for updates..."
                cd $dir;
                current_branch=$(git rev-parse --abbrev-ref HEAD);
                if [[ "$srcName" == "ckan" ]]; then
                    git fetch canada;
                    reslog=$(git log HEAD..canada/$current_branch --oneline);
                else
                    git fetch origin;
                    reslog=$(git log HEAD..origin/$current_branch --oneline);
                fi;
                if [[ "${reslog}" == "" ]]; then
                    printf "${srcName}: Up to date. Skipping..."
                else
                    git pull || true;
                    printf "${Green}${srcName}: Pulled updated code. Re-initializing in python environment..."
                    cd /srv/app;
                    if [[ -f "$dir/requirements.txt" ]]; then
                        pip install -r $dir/requirements.txt || true;
                    fi;
                    if [[ -f "$dir/dev-requirements.txt" ]]; then
                        pip install -r $dir/dev-requirements.txt || true;
                    fi;
                    if [[ -f "$dir/test-requirements.txt" ]]; then
                        pip install -r $dir/test-requirements.txt || true;
                    fi;
                    if [[ -f "$dir/setup.py" ]]; then
                        python $dir/setup.py develop || true;
                    fi;
                fi;
            else
                printf "${srcName}: Not a source repository. Skipping..."
            fi;
          done;
          cd /srv/app;
      - name: Checkout Repository (${{ github.head_ref || github.ref_name }})
        id: gitcheckout
        run: |
          cd /srv/app/src/ckanext-canada
          git fetch origin
          if [[ "${{ github.head_ref || github.ref_name }}" != "master" ]]; then
            git checkout -b ${{ github.head_ref || github.ref_name }} origin/${{ github.head_ref || github.ref_name }}
          fi;
          git fetch
          git pull
          source /srv/app/venv/bin/activate
          pip install -e .
          pip install -r requirements.txt
          pip install -r test-requirements.txt
          python3 setup.py develop
          pip install -e 'git+https://github.com/open-data/ckanext-cloudstorage.git@canada-v2.10#egg=ckanext-cloudstorage' -r 'https://raw.githubusercontent.com/open-data/ckanext-cloudstorage/canada-v2.10/requirements.txt'
          cd /srv/app
      - name: Install Node Dependencies
        if: steps.gitcheckout.outcome == 'success'
        run: |
          cd /srv/app/src/ckanext-canada
          npm ci
      - name: Check Types
        if: steps.gitcheckout.outcome == 'success'
        run: |
          export PYTHONPATH="${PYTHONPATH}:/srv/app/lib/python3.9/site-packages:/srv/app/src/ckanext-citeproc"
          source /srv/app/venv/bin/activate
          cd /srv/app/src/ckanext-canada
          npx pyright
